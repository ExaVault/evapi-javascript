'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
xaVault API
ee our API reference documentation at https://www.exavault.com/developer/api-docs/
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *
penAPI spec version: 2.0
ontact: support@exavault.com

his class is auto generated by the swagger code generator program.
https://github.com/swagger-api/swagger-codegen.git
o not edit the class manually.



var _ApiClient = require('../ApiClient');

var _ApiClient2 = _interopRequireDefault(_ApiClient);

var _AddSSHKeyRequestBody = require('../model/AddSSHKeyRequestBody');

var _AddSSHKeyRequestBody2 = _interopRequireDefault(_AddSSHKeyRequestBody);

var _SSHKeyCollectionResponse = require('../model/SSHKeyCollectionResponse');

var _SSHKeyCollectionResponse2 = _interopRequireDefault(_SSHKeyCollectionResponse);

var _SSHKeyResponse = require('../model/SSHKeyResponse');

var _SSHKeyResponse2 = _interopRequireDefault(_SSHKeyResponse);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
* SSHKeys service.
* @module api/SSHKeysApi
* @version 2.2.5
*/
var SSHKeysApi = function () {

  /**
  * Constructs a new SSHKeysApi. 
  * @alias module:api/SSHKeysApi
  * @class
  * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
  * default to {@link module:ApiClient#instance} if unspecified.
  */
  function SSHKeysApi(apiClient) {
    _classCallCheck(this, SSHKeysApi);

    this.apiClient = apiClient || _ApiClient2.default.instance;
  }

  /**
   * Callback function to receive the result of the addSSHKey operation.
   * @callback module:api/SSHKeysApi~addSSHKeyCallback
   * @param {String} error Error message, if any.
   * @param {module:model/SSHKeyResponse} data The data returned by the service call.
   * @param {String} response The complete HTTP response.
   */

  /**
   * Create a new SSH Key
   * Create a new SSH Key for a user. Provide the Public Key as formatted from the ssh-keygen command (openssh format or RFC-4716 format).  If you&#x27;d prefer to let us generate your key automatically, you can log in to your account via the web portal and set up new keys via the SSH Keys page. 
   * @param {Object} opts Optional parameters
   * @param {module:api/SSHKeysApi~addSSHKeyCallback} callback The callback function, accepting three arguments: error, data, response
   * data is of type: {@link module:model/SSHKeyResponse}
   */


  _createClass(SSHKeysApi, [{
    key: 'addSSHKey',
    value: function addSSHKey(evApiKey, evAccessToken, opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];

      var pathParams = {};
      var queryParams = {};
      var headerParams = {
        'ev-api-key': evApiKey,
        'ev-access-token': evAccessToken
      };
      var formParams = {};

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = _SSHKeyResponse2.default;

      return this.apiClient.callApi('/ssh-keys', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
    }
    /**
     * Callback function to receive the result of the deleteSSHKey operation.
     * @callback module:api/SSHKeysApi~deleteSSHKeyCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an SSH Key
     * Delete the specified SSH key. This will not delete or deactivate the user tied to the key.
     * @param {module:api/SSHKeysApi~deleteSSHKeyCallback} callback The callback function, accepting three arguments: error, data, response
     */

  }, {
    key: 'deleteSSHKey',
    value: function deleteSSHKey(id, evApiKey, evAccessToken, callback) {
      var postBody = null;

      var pathParams = {
        'id': id
      };
      var queryParams = {};
      var headerParams = {
        'ev-api-key': evApiKey,
        'ev-access-token': evAccessToken
      };
      var formParams = {};

      var authNames = [];
      var contentTypes = [];
      var accepts = [];
      var returnType = null;

      return this.apiClient.callApi('/ssh-keys/{id}', 'DELETE', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
    }
    /**
     * Callback function to receive the result of the getSSHKey operation.
     * @callback module:api/SSHKeysApi~getSSHKeyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SSHKeyResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get metadata for an SSH Key
     * Return the information for a single SSH Key
     * @param {module:api/SSHKeysApi~getSSHKeyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SSHKeyResponse}
     */

  }, {
    key: 'getSSHKey',
    value: function getSSHKey(id, evApiKey, evAccessToken, callback) {
      var postBody = null;

      var pathParams = {
        'id': id
      };
      var queryParams = {};
      var headerParams = {
        'ev-api-key': evApiKey,
        'ev-access-token': evAccessToken
      };
      var formParams = {};

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = _SSHKeyResponse2.default;

      return this.apiClient.callApi('/ssh-keys/{id}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
    }
    /**
     * Callback function to receive the result of the getSSHKeysList operation.
     * @callback module:api/SSHKeysApi~getSSHKeysListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SSHKeyCollectionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get metadata for a list of SSH Keys
     * Returns a list of SSH Keys within the account. Can be filtered for a single user.
     * @param {Object} opts Optional parameters
     * @param {module:api/SSHKeysApi~getSSHKeysListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SSHKeyCollectionResponse}
     */

  }, {
    key: 'getSSHKeysList',
    value: function getSSHKeysList(evApiKey, evAccessToken, opts, callback) {
      opts = opts || {};
      var postBody = null;

      var pathParams = {};
      var queryParams = {
        'userId': opts['userId'],
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      var headerParams = {
        'ev-api-key': evApiKey,
        'ev-access-token': evAccessToken
      };
      var formParams = {};

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = _SSHKeyCollectionResponse2.default;

      return this.apiClient.callApi('/ssh-keys', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
    }
  }]);

  return SSHKeysApi;
}();

exports.default = SSHKeysApi;