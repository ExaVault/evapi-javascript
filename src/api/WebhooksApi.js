'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * ExaVault API
ee our API reference documentation at https://www.exavault.com/developer/api-docs/

penAPI spec version: 2.0
ontact: support@exavault.com

his class is auto generated by the swagger code generator program.
https://github.com/swagger-api/swagger-codegen.git
o not edit the class manually.



var _ApiClient = require('../ApiClient');

var _ApiClient2 = _interopRequireDefault(_ApiClient);

var _AddWebhookRequestBody = require('../model/AddWebhookRequestBody');

var _AddWebhookRequestBody2 = _interopRequireDefault(_AddWebhookRequestBody);

var _EmptyResponse = require('../model/EmptyResponse');

var _EmptyResponse2 = _interopRequireDefault(_EmptyResponse);

var _UpdateWebhookRequestBody = require('../model/UpdateWebhookRequestBody');

var _UpdateWebhookRequestBody2 = _interopRequireDefault(_UpdateWebhookRequestBody);

var _WebhookCollectionResponse = require('../model/WebhookCollectionResponse');

var _WebhookCollectionResponse2 = _interopRequireDefault(_WebhookCollectionResponse);

var _WebhookResponse = require('../model/WebhookResponse');

var _WebhookResponse2 = _interopRequireDefault(_WebhookResponse);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
* Webhooks service.
* @module api/WebhooksApi
* @version 2.2.4
*/
var WebhooksApi = function () {

  /**
  * Constructs a new WebhooksApi. 
  * @alias module:api/WebhooksApi
  * @class
  * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
  * default to {@link module:ApiClient#instance} if unspecified.
  */
  function WebhooksApi(apiClient) {
    _classCallCheck(this, WebhooksApi);

    this.apiClient = apiClient || _ApiClient2.default.instance;
  }

  /**
   * Callback function to receive the result of the addWebhook operation.
   * @callback module:api/WebhooksApi~addWebhookCallback
   * @param {String} error Error message, if any.
   * @param {module:model/WebhookResponse} data The data returned by the service call.
   * @param {String} response The complete HTTP response.
   */

  /**
   * Add A New Webhook
   * Create a new Webhook on your account. Creating a Webhook will require an endpoint URL, a path, what events should trigger a webhook, and what request version to use. 
   * @param {Object} opts Optional parameters
   * @param {module:api/WebhooksApi~addWebhookCallback} callback The callback function, accepting three arguments: error, data, response
   * data is of type: {@link module:model/WebhookResponse}
   */


  _createClass(WebhooksApi, [{
    key: 'addWebhook',
    value: function addWebhook(evApiKey, evAccessToken, opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];

      var pathParams = {};
      var queryParams = {};
      var headerParams = {
        'ev-api-key': evApiKey,
        'ev-access-token': evAccessToken
      };
      var formParams = {};

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = _WebhookResponse2.default;

      return this.apiClient.callApi('/webhooks', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
    }
    /**
     * Callback function to receive the result of the deleteWebhook operation.
     * @callback module:api/WebhooksApi~deleteWebhookCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EmptyResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a webhook
     * Deleted the specified webhook. This will not affect logs or any resources the webhook is connected to. 
     * @param {module:api/WebhooksApi~deleteWebhookCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EmptyResponse}
     */

  }, {
    key: 'deleteWebhook',
    value: function deleteWebhook(id, evApiKey, evAccessToken, callback) {
      var postBody = null;

      var pathParams = {
        'id': id
      };
      var queryParams = {};
      var headerParams = {
        'ev-api-key': evApiKey,
        'ev-access-token': evAccessToken
      };
      var formParams = {};

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = _EmptyResponse2.default;

      return this.apiClient.callApi('/webhooks/{id}', 'DELETE', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
    }
    /**
     * Callback function to receive the result of the getWebhookById operation.
     * @callback module:api/WebhooksApi~getWebhookByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WebhookResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get info for a webhook
     * Returns the metadata for a specific webhook. Webhook IDs can be retrieve from GET /webhooks
     * @param {Object} opts Optional parameters
     * @param {module:api/WebhooksApi~getWebhookByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WebhookResponse}
     */

  }, {
    key: 'getWebhookById',
    value: function getWebhookById(id, evApiKey, evAccessToken, opts, callback) {
      opts = opts || {};
      var postBody = null;

      var pathParams = {
        'id': id
      };
      var queryParams = {
        'include': opts['include']
      };
      var headerParams = {
        'ev-api-key': evApiKey,
        'ev-access-token': evAccessToken
      };
      var formParams = {};

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = _WebhookResponse2.default;

      return this.apiClient.callApi('/webhooks/{id}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
    }
    /**
     * Callback function to receive the result of the getWehooksList operation.
     * @callback module:api/WebhooksApi~getWehooksListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WebhookCollectionResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Webhooks List
     * Returns a list of Webhooks. By default, this will return metadata on all Webhooks within the account. 
     * @param {Object} opts Optional parameters
     * @param {module:api/WebhooksApi~getWehooksListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WebhookCollectionResponse}
     */

  }, {
    key: 'getWehooksList',
    value: function getWehooksList(evApiKey, evAccessToken, opts, callback) {
      opts = opts || {};
      var postBody = null;

      var pathParams = {};
      var queryParams = {
        'include': opts['include'],
        'offset': opts['offset'],
        'limit': opts['limit']
      };
      var headerParams = {
        'ev-api-key': evApiKey,
        'ev-access-token': evAccessToken
      };
      var formParams = {};

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = _WebhookCollectionResponse2.default;

      return this.apiClient.callApi('/webhooks', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
    }
    /**
     * Callback function to receive the result of the regenerateWebhookToken operation.
     * @callback module:api/WebhooksApi~regenerateWebhookTokenCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WebhookResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Regenerate security token
     * This endpoint will allow you to regenerate the security token for a webhook if you believe it’s been compromised in any way. 
     * @param {module:api/WebhooksApi~regenerateWebhookTokenCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WebhookResponse}
     */

  }, {
    key: 'regenerateWebhookToken',
    value: function regenerateWebhookToken(id, evApiKey, evAccessToken, callback) {
      var postBody = null;

      var pathParams = {
        'id': id
      };
      var queryParams = {};
      var headerParams = {
        'ev-api-key': evApiKey,
        'ev-access-token': evAccessToken
      };
      var formParams = {};

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = _WebhookResponse2.default;

      return this.apiClient.callApi('/webhooks/regenerate-token/{id}', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
    }
    /**
     * Callback function to receive the result of the resendWebhookActivityEntry operation.
     * @callback module:api/WebhooksApi~resendWebhookActivityEntryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EmptyResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Resend a webhook message
     * This endpoint will allow you to resend a webhook that was previously sent. Resent webhooks will send exactly the same as the original webhook with the exception of the “sent” timestamp. Activity IDs can be retrieve from the webhook logs in your account or via GET /activity/webhooks
     * @param {module:api/WebhooksApi~resendWebhookActivityEntryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EmptyResponse}
     */

  }, {
    key: 'resendWebhookActivityEntry',
    value: function resendWebhookActivityEntry(activityId, evApiKey, evAccessToken, callback) {
      var postBody = null;

      var pathParams = {
        'activityId': activityId
      };
      var queryParams = {};
      var headerParams = {
        'ev-api-key': evApiKey,
        'ev-access-token': evAccessToken
      };
      var formParams = {};

      var authNames = [];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = _EmptyResponse2.default;

      return this.apiClient.callApi('/webhooks/resend/{activityId}', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
    }
    /**
     * Callback function to receive the result of the updateWebhook operation.
     * @callback module:api/WebhooksApi~updateWebhookCallback
     * @param {String} error Error message, if any.
     * @param {module:model/WebhookResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a webhook
     * Update the specified webhook. Updated webhooks will take effect immediately and could impact active workflows. Please be certain the webhook is not currently in use prior to updating.   You only need to send the portions of the webhook configuration you wish to change, rather than the entire webhook object.
     * @param {Object} opts Optional parameters
     * @param {module:api/WebhooksApi~updateWebhookCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/WebhookResponse}
     */

  }, {
    key: 'updateWebhook',
    value: function updateWebhook(id, evApiKey, evAccessToken, opts, callback) {
      opts = opts || {};
      var postBody = opts['body'];

      var pathParams = {
        'id': id
      };
      var queryParams = {};
      var headerParams = {
        'ev-api-key': evApiKey,
        'ev-access-token': evAccessToken
      };
      var formParams = {};

      var authNames = [];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = _WebhookResponse2.default;

      return this.apiClient.callApi('/webhooks/{id}', 'PATCH', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, callback);
    }
  }]);

  return WebhooksApi;
}();

exports.default = WebhooksApi;