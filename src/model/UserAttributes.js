'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
xaVault API
ee our API reference documentation at https://www.exavault.com/developer/api-docs/

penAPI spec version: 2.0
ontact: support@exavault.com

his class is auto generated by the swagger code generator program.
https://github.com/swagger-api/swagger-codegen.git
o not edit the class manually.



var _ApiClient = require('../ApiClient');

var _ApiClient2 = _interopRequireDefault(_ApiClient);

var _UserPermissions = require('./UserPermissions');

var _UserPermissions2 = _interopRequireDefault(_UserPermissions);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
* The UserAttributes model module.
* @module model/UserAttributes
* @version 2.2.2
*/
var UserAttributes = function () {
    /**
    * Constructs a new <code>UserAttributes</code>.
    * Attributes of the user including expiration, home directory, and permissions. 
    * @alias module:model/UserAttributes
    * @class
    * @param status {module:model/UserAttributes.StatusEnum} Indicates user activity status. `0` means the user is locked and cannot log in. `1` means the user is active and can log in.
    * @param created {Date} Timestamp of user creation.
    * @param modified {Date} Timestamp of user modification.
    * @param accountName {String} Name of the account this user belongs to.
    * @param username {String} Username of the user.
    * @param nickname {String} Nickname of the user.
    * @param homeDir {String} Path to the user's home folder.
    * @param permissions {module:model/UserPermissions} 
    * @param role {module:model/UserAttributes.RoleEnum} User's access level
    * @param timeZone {String} User's timezone. See <a href='https://php.net/manual/en/timezones.php' target='blank'>this page</a> for allowed values.
    * @param onboarding {Boolean} Whether the onboarding help system is enabled for this user. `true` means that additional help popups are displayed in the web application for this user.
    */

    function UserAttributes(status, created, modified, accountName, username, nickname, homeDir, permissions, role, timeZone, onboarding) {
        _classCallCheck(this, UserAttributes);

        this['status'] = undefined;
        this['expiration'] = undefined;
        this['created'] = undefined;
        this['modified'] = undefined;
        this['accessTimestamp'] = undefined;
        this['accountName'] = undefined;
        this['username'] = undefined;
        this['nickname'] = undefined;
        this['email'] = undefined;
        this['homeDir'] = undefined;
        this['permissions'] = undefined;
        this['role'] = undefined;
        this['timeZone'] = undefined;
        this['onboarding'] = undefined;
        this['firstLogin'] = undefined;
        this['locked'] = undefined;


        this['status'] = status;
        this['created'] = created;
        this['modified'] = modified;
        this['accountName'] = accountName;
        this['username'] = username;
        this['nickname'] = nickname;
        this['homeDir'] = homeDir;
        this['permissions'] = permissions;
        this['role'] = role;
        this['timeZone'] = timeZone;
        this['onboarding'] = onboarding;
    }

    /**
    * Constructs a <code>UserAttributes</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/UserAttributes} obj Optional instance to populate.
    * @return {module:model/UserAttributes} The populated <code>UserAttributes</code> instance.
    */


    _createClass(UserAttributes, null, [{
        key: 'constructFromObject',
        value: function constructFromObject(data, obj) {
            if (data) {
                obj = obj || new UserAttributes();

                if (data.hasOwnProperty('status')) {
                    obj['status'] = _ApiClient2.default.convertToType(data['status'], 'Number');
                }
                if (data.hasOwnProperty('expiration')) {
                    obj['expiration'] = _ApiClient2.default.convertToType(data['expiration'], 'String');
                }
                if (data.hasOwnProperty('created')) {
                    obj['created'] = _ApiClient2.default.convertToType(data['created'], 'Date');
                }
                if (data.hasOwnProperty('modified')) {
                    obj['modified'] = _ApiClient2.default.convertToType(data['modified'], 'Date');
                }
                if (data.hasOwnProperty('accessTimestamp')) {
                    obj['accessTimestamp'] = _ApiClient2.default.convertToType(data['accessTimestamp'], 'String');
                }
                if (data.hasOwnProperty('accountName')) {
                    obj['accountName'] = _ApiClient2.default.convertToType(data['accountName'], 'String');
                }
                if (data.hasOwnProperty('username')) {
                    obj['username'] = _ApiClient2.default.convertToType(data['username'], 'String');
                }
                if (data.hasOwnProperty('nickname')) {
                    obj['nickname'] = _ApiClient2.default.convertToType(data['nickname'], 'String');
                }
                if (data.hasOwnProperty('email')) {
                    obj['email'] = _ApiClient2.default.convertToType(data['email'], 'String');
                }
                if (data.hasOwnProperty('homeDir')) {
                    obj['homeDir'] = _ApiClient2.default.convertToType(data['homeDir'], 'String');
                }
                if (data.hasOwnProperty('permissions')) {
                    obj['permissions'] = _UserPermissions2.default.constructFromObject(data['permissions']);
                }
                if (data.hasOwnProperty('role')) {
                    obj['role'] = _ApiClient2.default.convertToType(data['role'], 'String');
                }
                if (data.hasOwnProperty('timeZone')) {
                    obj['timeZone'] = _ApiClient2.default.convertToType(data['timeZone'], 'String');
                }
                if (data.hasOwnProperty('onboarding')) {
                    obj['onboarding'] = _ApiClient2.default.convertToType(data['onboarding'], 'Boolean');
                }
                if (data.hasOwnProperty('firstLogin')) {
                    obj['firstLogin'] = _ApiClient2.default.convertToType(data['firstLogin'], 'Boolean');
                }
                if (data.hasOwnProperty('locked')) {
                    obj['locked'] = _ApiClient2.default.convertToType(data['locked'], 'Boolean');
                }
            }
            return obj;
        }

        /**
        * Indicates user activity status. `0` means the user is locked and cannot log in. `1` means the user is active and can log in.
        * @member {module:model/UserAttributes.StatusEnum} status
        */

        /**
        * Timestamp of user expiration.
        * @member {String} expiration
        */

        /**
        * Timestamp of user creation.
        * @member {Date} created
        */

        /**
        * Timestamp of user modification.
        * @member {Date} modified
        */

        /**
        * Timestamp of most recent successful user login.
        * @member {String} accessTimestamp
        */

        /**
        * Name of the account this user belongs to.
        * @member {String} accountName
        */

        /**
        * Username of the user.
        * @member {String} username
        */

        /**
        * Nickname of the user.
        * @member {String} nickname
        */

        /**
        * Email address of the user.
        * @member {String} email
        */

        /**
        * Path to the user's home folder.
        * @member {String} homeDir
        */

        /**
        * @member {module:model/UserPermissions} permissions
        */

        /**
        * User's access level
        * @member {module:model/UserAttributes.RoleEnum} role
        */

        /**
        * User's timezone. See <a href='https://php.net/manual/en/timezones.php' target='blank'>this page</a> for allowed values.
        * @member {String} timeZone
        */

        /**
        * Whether the onboarding help system is enabled for this user. `true` means that additional help popups are displayed in the web application for this user.
        * @member {Boolean} onboarding
        */

        /**
        * `true` if the user has logged into the system.
        * @member {Boolean} firstLogin
        */

        /**
        * `true` if the user is locked and cannot log in.
        * @member {Boolean} locked
        */


        /**
        * Allowed values for the <code>status</code> property.
        * @enum {Number}
        * @readonly
        */

        /**
        * Allowed values for the <code>role</code> property.
        * @enum {String}
        * @readonly
        */

    }]);

    return UserAttributes;
}();

UserAttributes.StatusEnum = {
    /**
     * value: 0
     * @const
     */
    "0": 0,
    /**
     * value: 1
     * @const
     */
    "1": 1 };
UserAttributes.RoleEnum = {
    /**
     * value: "user"
     * @const
     */
    "user": "user",
    /**
     * value: "admin"
     * @const
     */
    "admin": "admin",
    /**
     * value: "master"
     * @const
     */
    "master": "master" };
exports.default = UserAttributes;