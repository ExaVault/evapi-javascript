'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
xaVault API
ee our API reference documentation at https://www.exavault.com/developer/api-docs/

penAPI spec version: 2.0
ontact: support@exavault.com

his class is auto generated by the swagger code generator program.
https://github.com/swagger-api/swagger-codegen.git
o not edit the class manually.



var _ApiClient = require('../ApiClient');

var _ApiClient2 = _interopRequireDefault(_ApiClient);

var _AccessMode = require('./AccessMode');

var _AccessMode2 = _interopRequireDefault(_AccessMode);

var _ShareMessage = require('./ShareMessage');

var _ShareMessage2 = _interopRequireDefault(_ShareMessage);

var _ShareRecipient = require('./ShareRecipient');

var _ShareRecipient2 = _interopRequireDefault(_ShareRecipient);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
* The WebhookV2EventDataShare model module.
* @module model/WebhookV2EventDataShare
* @version 2.2.5
*/
var WebhookV2EventDataShare = function () {
    /**
    * Constructs a new <code>WebhookV2EventDataShare</code>.
    * @alias module:model/WebhookV2EventDataShare
    * @class
    */

    function WebhookV2EventDataShare() {
        _classCallCheck(this, WebhookV2EventDataShare);

        this['id'] = undefined;
        this['name'] = undefined;
        this['hasPassword'] = undefined;
        this['isPublic'] = undefined;
        this['accessMode'] = undefined;
        this['accessDescription'] = undefined;
        this['embed'] = undefined;
        this['hash'] = undefined;
        this['ownerHash'] = undefined;
        this['expiration'] = undefined;
        this['trackingStatus'] = undefined;
        this['expired'] = undefined;
        this['resent'] = undefined;
        this['type'] = undefined;
        this['requireEmail'] = undefined;
        this['fileDropCreateFolders'] = undefined;
        this['formId'] = undefined;
        this['assets'] = undefined;
        this['paths'] = undefined;
        this['recipients'] = undefined;
        this['messages'] = undefined;
        this['inherited'] = undefined;
        this['status'] = undefined;
        this['hasNotification'] = undefined;
        this['created'] = undefined;
        this['modified'] = undefined;
    }

    /**
    * Constructs a <code>WebhookV2EventDataShare</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/WebhookV2EventDataShare} obj Optional instance to populate.
    * @return {module:model/WebhookV2EventDataShare} The populated <code>WebhookV2EventDataShare</code> instance.
    */


    _createClass(WebhookV2EventDataShare, null, [{
        key: 'constructFromObject',
        value: function constructFromObject(data, obj) {
            if (data) {
                obj = obj || new WebhookV2EventDataShare();

                if (data.hasOwnProperty('id')) {
                    obj['id'] = _ApiClient2.default.convertToType(data['id'], 'Number');
                }
                if (data.hasOwnProperty('name')) {
                    obj['name'] = _ApiClient2.default.convertToType(data['name'], 'String');
                }
                if (data.hasOwnProperty('hasPassword')) {
                    obj['hasPassword'] = _ApiClient2.default.convertToType(data['hasPassword'], 'Boolean');
                }
                if (data.hasOwnProperty('isPublic')) {
                    obj['isPublic'] = _ApiClient2.default.convertToType(data['isPublic'], 'Boolean');
                }
                if (data.hasOwnProperty('accessMode')) {
                    obj['accessMode'] = _AccessMode2.default.constructFromObject(data['accessMode']);
                }
                if (data.hasOwnProperty('accessDescription')) {
                    obj['accessDescription'] = _ApiClient2.default.convertToType(data['accessDescription'], 'String');
                }
                if (data.hasOwnProperty('embed')) {
                    obj['embed'] = _ApiClient2.default.convertToType(data['embed'], 'Boolean');
                }
                if (data.hasOwnProperty('hash')) {
                    obj['hash'] = _ApiClient2.default.convertToType(data['hash'], 'String');
                }
                if (data.hasOwnProperty('ownerHash')) {
                    obj['ownerHash'] = _ApiClient2.default.convertToType(data['ownerHash'], 'String');
                }
                if (data.hasOwnProperty('expiration')) {
                    obj['expiration'] = _ApiClient2.default.convertToType(data['expiration'], 'String');
                }
                if (data.hasOwnProperty('trackingStatus')) {
                    obj['trackingStatus'] = _ApiClient2.default.convertToType(data['trackingStatus'], 'String');
                }
                if (data.hasOwnProperty('expired')) {
                    obj['expired'] = _ApiClient2.default.convertToType(data['expired'], 'Boolean');
                }
                if (data.hasOwnProperty('resent')) {
                    obj['resent'] = _ApiClient2.default.convertToType(data['resent'], 'Boolean');
                }
                if (data.hasOwnProperty('type')) {
                    obj['type'] = _ApiClient2.default.convertToType(data['type'], 'String');
                }
                if (data.hasOwnProperty('requireEmail')) {
                    obj['requireEmail'] = _ApiClient2.default.convertToType(data['requireEmail'], 'Boolean');
                }
                if (data.hasOwnProperty('fileDropCreateFolders')) {
                    obj['fileDropCreateFolders'] = _ApiClient2.default.convertToType(data['fileDropCreateFolders'], 'Boolean');
                }
                if (data.hasOwnProperty('formId')) {
                    obj['formId'] = _ApiClient2.default.convertToType(data['formId'], 'Number');
                }
                if (data.hasOwnProperty('assets')) {
                    obj['assets'] = _ApiClient2.default.convertToType(data['assets'], ['String']);
                }
                if (data.hasOwnProperty('paths')) {
                    obj['paths'] = _ApiClient2.default.convertToType(data['paths'], ['String']);
                }
                if (data.hasOwnProperty('recipients')) {
                    obj['recipients'] = _ApiClient2.default.convertToType(data['recipients'], [_ShareRecipient2.default]);
                }
                if (data.hasOwnProperty('messages')) {
                    obj['messages'] = _ApiClient2.default.convertToType(data['messages'], [_ShareMessage2.default]);
                }
                if (data.hasOwnProperty('inherited')) {
                    obj['inherited'] = _ApiClient2.default.convertToType(data['inherited'], 'Boolean');
                }
                if (data.hasOwnProperty('status')) {
                    obj['status'] = _ApiClient2.default.convertToType(data['status'], 'Number');
                }
                if (data.hasOwnProperty('hasNotification')) {
                    obj['hasNotification'] = _ApiClient2.default.convertToType(data['hasNotification'], 'Boolean');
                }
                if (data.hasOwnProperty('created')) {
                    obj['created'] = _ApiClient2.default.convertToType(data['created'], 'Date');
                }
                if (data.hasOwnProperty('modified')) {
                    obj['modified'] = _ApiClient2.default.convertToType(data['modified'], 'Date');
                }
            }
            return obj;
        }

        /**
        * Unique ID of associated receive folder
        * @member {Number} id
        */

        /**
        * Name of receiv
        * @member {String} name
        */

        /**
        * Whether the receive folder requires visitors to enter a password
        * @member {Boolean} hasPassword
        */

        /**
        * Whether visitors can acccess the receive folder without an invitation link
        * @member {Boolean} isPublic
        */

        /**
        * @member {module:model/AccessMode} accessMode
        */

        /**
        * Human readable description of what visitors are allowed to do with the receive folder
        * @member {String} accessDescription
        */

        /**
        * Whether the receive folder can be embedded within a web page
        * @member {Boolean} embed
        */

        /**
        * Hash value of the receive
        * @member {String} hash
        */

        /**
        * Hash value of the user who \"owns\" the receive fo
        * @member {String} ownerHash
        */

        /**
        * Date and time when the receive folder will no longer be 
        * @member {String} expiration
        */

        /**
        * Status of invitations sent for this receive folder
        * @member {String} trackingStatus
        */

        /**
        * Whether access to the receive folder has expired
        * @member {Boolean} expired
        */

        /**
        * Whether invitations to the receive folder have been re-sent to recipients
        * @member {Boolean} resent
        */

        /**
        * Type of share **\"receive\"**
        * @member {String} type
        */

        /**
        * Whether visitors must enter their email addresses to access the receive folder
        * @member {Boolean} requireEmail
        */

        /**
        * Whether files should be automatically placed in subfolders of the receive folder
        * @member {Boolean} fileDropCreateFolders
        */

        /**
        * ID of the associated form
        * @member {Number} formId
        */

        /**
        * List of items included in the share
        * @member {Array.<String>} assets
        */

        /**
        * List
        * @member {Array.<String>} paths
        */

        /**
        * List of recipients invited  to the receive folder
        * @member {Array.<module:model/ShareRecipient>} recipients
        */

        /**
        * Invitation messages sent for receive folder
        * @member {Array.<module:model/ShareMessage>} messages
        */

        /**
        * Whether this share is inherited from a parent fol
        * @member {Boolean} inherited
        */

        /**
        * 1 if share is active. 0 if not.
        * @member {Number} status
        */

        /**
        * Whether delivery receipts are enabled for this share
        * @member {Boolean} hasNotification
        */

        /**
        * Date and ti
        * @member {Date} created
        */

        /**
        * Date and time when the share was last changed
        * @member {Date} modified
        */

    }]);

    return WebhookV2EventDataShare;
}();

exports.default = WebhookV2EventDataShare;