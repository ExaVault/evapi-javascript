'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
xaVault API
ee our API reference documentation at https://www.exavault.com/developer/api-docs/

penAPI spec version: 2.0
ontact: support@exavault.com

his class is auto generated by the swagger code generator program.
https://github.com/swagger-api/swagger-codegen.git
o not edit the class manually.



var _ApiClient = require('../ApiClient');

var _ApiClient2 = _interopRequireDefault(_ApiClient);

var _AccessMode = require('./AccessMode');

var _AccessMode2 = _interopRequireDefault(_AccessMode);

var _SharesRecipients = require('./SharesRecipients');

var _SharesRecipients2 = _interopRequireDefault(_SharesRecipients);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
* The AddShareRequestBody model module.
* @module model/AddShareRequestBody
* @version 2.2.3
*/
var AddShareRequestBody = function () {
    /**
    * Constructs a new <code>AddShareRequestBody</code>.
    * @alias module:model/AddShareRequestBody
    * @class
    * @param type {module:model/AddShareRequestBody.TypeEnum} The type of share to create. See above for a description of each.
    * @param name {String} A name for the share. This will be visible on the page that recipients visit. 
    */

    function AddShareRequestBody(type, name) {
        _classCallCheck(this, AddShareRequestBody);

        this['type'] = undefined;
        this['name'] = undefined;
        this['resources'] = undefined;
        this['accessMode'] = undefined;
        this['embed'] = undefined;
        this['recipients'] = undefined;
        this['expiration'] = undefined;
        this['hasNotification'] = undefined;
        this['isPublic'] = undefined;
        this['messageBody'] = undefined;
        this['notificationEmails'] = undefined;
        this['password'] = undefined;
        this['requireEmail'] = undefined;
        this['messageSubject'] = undefined;
        this['fileDropCreateFolders'] = undefined;
        this['sendingLocalFiles'] = undefined;


        this['type'] = type;
        this['name'] = name;
    }

    /**
    * Constructs a <code>AddShareRequestBody</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/AddShareRequestBody} obj Optional instance to populate.
    * @return {module:model/AddShareRequestBody} The populated <code>AddShareRequestBody</code> instance.
    */


    _createClass(AddShareRequestBody, null, [{
        key: 'constructFromObject',
        value: function constructFromObject(data, obj) {
            if (data) {
                obj = obj || new AddShareRequestBody();

                if (data.hasOwnProperty('type')) {
                    obj['type'] = _ApiClient2.default.convertToType(data['type'], 'String');
                }
                if (data.hasOwnProperty('name')) {
                    obj['name'] = _ApiClient2.default.convertToType(data['name'], 'String');
                }
                if (data.hasOwnProperty('resources')) {
                    obj['resources'] = _ApiClient2.default.convertToType(data['resources'], ['String']);
                }
                if (data.hasOwnProperty('accessMode')) {
                    obj['accessMode'] = _AccessMode2.default.constructFromObject(data['accessMode']);
                }
                if (data.hasOwnProperty('embed')) {
                    obj['embed'] = _ApiClient2.default.convertToType(data['embed'], 'Boolean');
                }
                if (data.hasOwnProperty('recipients')) {
                    obj['recipients'] = _ApiClient2.default.convertToType(data['recipients'], [_SharesRecipients2.default]);
                }
                if (data.hasOwnProperty('expiration')) {
                    obj['expiration'] = _ApiClient2.default.convertToType(data['expiration'], 'Date');
                }
                if (data.hasOwnProperty('hasNotification')) {
                    obj['hasNotification'] = _ApiClient2.default.convertToType(data['hasNotification'], 'Boolean');
                }
                if (data.hasOwnProperty('isPublic')) {
                    obj['isPublic'] = _ApiClient2.default.convertToType(data['isPublic'], 'Boolean');
                }
                if (data.hasOwnProperty('messageBody')) {
                    obj['messageBody'] = _ApiClient2.default.convertToType(data['messageBody'], 'String');
                }
                if (data.hasOwnProperty('notificationEmails')) {
                    obj['notificationEmails'] = _ApiClient2.default.convertToType(data['notificationEmails'], ['String']);
                }
                if (data.hasOwnProperty('password')) {
                    obj['password'] = _ApiClient2.default.convertToType(data['password'], 'String');
                }
                if (data.hasOwnProperty('requireEmail')) {
                    obj['requireEmail'] = _ApiClient2.default.convertToType(data['requireEmail'], 'Boolean');
                }
                if (data.hasOwnProperty('messageSubject')) {
                    obj['messageSubject'] = _ApiClient2.default.convertToType(data['messageSubject'], 'String');
                }
                if (data.hasOwnProperty('fileDropCreateFolders')) {
                    obj['fileDropCreateFolders'] = _ApiClient2.default.convertToType(data['fileDropCreateFolders'], 'Boolean');
                }
                if (data.hasOwnProperty('sendingLocalFiles')) {
                    obj['sendingLocalFiles'] = _ApiClient2.default.convertToType(data['sendingLocalFiles'], 'Boolean');
                }
            }
            return obj;
        }

        /**
        * The type of share to create. See above for a description of each.
        * @member {module:model/AddShareRequestBody.TypeEnum} type
        */

        /**
        * A name for the share. This will be visible on the page that recipients visit. 
        * @member {String} name
        */

        /**
        * Array of resources for this share. See details on [how to specify resources](#section/Identifying-Resources) above.  **shared_folder** and **receive** shares must have only one `resource`, which is a directory that does not have a current share attached.  **send** shares may have multiple `resource` parameters. You can also leave this parameter null if you are planning to upload files to the send. If you are planning to upload files to the send that are not yet in your account, you will also need to call the [POST /shares/complete-send/{id}](#operation/completeDirectSend) endpoint to finish the send operation. 
        * @member {Array.<String>} resources
        */

        /**
        * @member {module:model/AccessMode} accessMode
        */

        /**
        * Whether this share can be embedded within a web page.
        * @member {Boolean} embed
        */

        /**
        * People you want to invite to the share. **Note**: unless you also set the `messageSubject` and `messageBody` for the new share, invitation emails will not be sent to these recipients.
        * @member {Array.<module:model/SharesRecipients>} recipients
        */

        /**
        * Expiration date for the share. If someone attempts to use the share after this date, they will receive an error that the share is not available.
        * @member {Date} expiration
        */

        /**
        * Whether delivery receipts should be sent.
        * @member {Boolean} hasNotification
        */

        /**
        * Whether someone can visit the share without following a personalized recipient link.
        * @member {Boolean} isPublic
        */

        /**
        * The message to be included in email invitations for your recipients. Ignored if you have not also provided `recipients` and `messageSubject`
        * @member {String} messageBody
        */

        /**
        * Emails that will receive delivery receipts for this share. `hasNotification` must be **true** for delivery receipts will be sent.
        * @member {Array.<String>} notificationEmails
        */

        /**
        * Set a password for recipients to access the share. All recipients will use the same password.
        * @member {String} password
        */

        /**
        * True if recipients must provide their email to view the share.
        * @member {Boolean} requireEmail
        */

        /**
        * Subject to use on emails inviting recipients to the share. Ignored if you have not also provided `recipients` and a `messageBody`
        * @member {String} messageSubject
        */

        /**
        * Only used for **receive** shares. If true, uploads will be automatically placed into sub-folders of the folder, named after the chosen field on your form. 
        * @member {Boolean} fileDropCreateFolders
        */

        /**
        * Use this only for **send** shares. Flag to indicate that you are going to upload additional files from your computer to the share. If this is **true**, you will also need to use the [POST /shares/complete-send/{id}](#operation/completeDirectSend) call to finish setting up your share after the files are uploaded.
        * @member {Boolean} sendingLocalFiles
        */


        /**
        * Allowed values for the <code>type</code> property.
        * @enum {String}
        * @readonly
        */

    }]);

    return AddShareRequestBody;
}();

AddShareRequestBody.TypeEnum = {
    /**
     * value: "shared_folder"
     * @const
     */
    "shared_folder": "shared_folder",
    /**
     * value: "receive"
     * @const
     */
    "receive": "receive",
    /**
     * value: "send"
     * @const
     */
    "send": "send" };
exports.default = AddShareRequestBody;