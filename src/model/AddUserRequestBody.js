'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
xaVault API
ee our API reference documentation at https://www.exavault.com/developer/api-docs/

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      * OpenAPI spec version: 2.0
ontact: support@exavault.com

his class is auto generated by the swagger code generator program.
https://github.com/swagger-api/swagger-codegen.git
o not edit the class manually.



var _ApiClient = require('../ApiClient');

var _ApiClient2 = _interopRequireDefault(_ApiClient);

var _UsersPermissions = require('./UsersPermissions');

var _UsersPermissions2 = _interopRequireDefault(_UsersPermissions);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
* The AddUserRequestBody model module.
* @module model/AddUserRequestBody
* @version 2.2.5
*/
var AddUserRequestBody = function () {
    /**
    * Constructs a new <code>AddUserRequestBody</code>.
    * @alias module:model/AddUserRequestBody
    * @class
    * @param username {String} Username of the user to create. This should follow standard username conventions - spaces are not allowed, etc. We do allow email addresses as usernames.  **Note** Usernames must be unique across all ExaVault accounts.
    * @param homeResource {String} Resource identifier for the user's home folder. See details on [how to specify resources](#section/Identifying-Resources) above.  The user will be locked to this directory and unable to move 'up' in the account. If the folder does not exist in the account, it will be created when the user is created.   Users with the `role` **admin** should have their homeResource set to '/'
    * @param email {String} Email address for the user
    * @param password {String} Password for the user
    * @param role {module:model/AddUserRequestBody.RoleEnum} The type of user to create, either **user** or **admin**.
    * @param permissions {module:model/UsersPermissions} 
    * @param timeZone {String} Time zone, used for accurate time display within the application. See <a href='https://php.net/manual/en/timezones.php' target='blank'>this page</a> for allowed values. 
    */

    function AddUserRequestBody(username, homeResource, email, password, role, permissions, timeZone) {
        _classCallCheck(this, AddUserRequestBody);

        this['username'] = undefined;
        this['nickname'] = undefined;
        this['homeResource'] = undefined;
        this['email'] = undefined;
        this['password'] = undefined;
        this['role'] = undefined;
        this['permissions'] = undefined;
        this['timeZone'] = undefined;
        this['expiration'] = undefined;
        this['locked'] = undefined;
        this['welcomeEmail'] = undefined;
        this['onboarding'] = undefined;


        this['username'] = username;
        this['homeResource'] = homeResource;
        this['email'] = email;
        this['password'] = password;
        this['role'] = role;
        this['permissions'] = permissions;
        this['timeZone'] = timeZone;
    }

    /**
    * Constructs a <code>AddUserRequestBody</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/AddUserRequestBody} obj Optional instance to populate.
    * @return {module:model/AddUserRequestBody} The populated <code>AddUserRequestBody</code> instance.
    */


    _createClass(AddUserRequestBody, null, [{
        key: 'constructFromObject',
        value: function constructFromObject(data, obj) {
            if (data) {
                obj = obj || new AddUserRequestBody();

                if (data.hasOwnProperty('username')) {
                    obj['username'] = _ApiClient2.default.convertToType(data['username'], 'String');
                }
                if (data.hasOwnProperty('nickname')) {
                    obj['nickname'] = _ApiClient2.default.convertToType(data['nickname'], 'String');
                }
                if (data.hasOwnProperty('homeResource')) {
                    obj['homeResource'] = _ApiClient2.default.convertToType(data['homeResource'], 'String');
                }
                if (data.hasOwnProperty('email')) {
                    obj['email'] = _ApiClient2.default.convertToType(data['email'], 'String');
                }
                if (data.hasOwnProperty('password')) {
                    obj['password'] = _ApiClient2.default.convertToType(data['password'], 'String');
                }
                if (data.hasOwnProperty('role')) {
                    obj['role'] = _ApiClient2.default.convertToType(data['role'], 'String');
                }
                if (data.hasOwnProperty('permissions')) {
                    obj['permissions'] = _UsersPermissions2.default.constructFromObject(data['permissions']);
                }
                if (data.hasOwnProperty('timeZone')) {
                    obj['timeZone'] = _ApiClient2.default.convertToType(data['timeZone'], 'String');
                }
                if (data.hasOwnProperty('expiration')) {
                    obj['expiration'] = _ApiClient2.default.convertToType(data['expiration'], 'String');
                }
                if (data.hasOwnProperty('locked')) {
                    obj['locked'] = _ApiClient2.default.convertToType(data['locked'], 'Boolean');
                }
                if (data.hasOwnProperty('welcomeEmail')) {
                    obj['welcomeEmail'] = _ApiClient2.default.convertToType(data['welcomeEmail'], 'Boolean');
                }
                if (data.hasOwnProperty('onboarding')) {
                    obj['onboarding'] = _ApiClient2.default.convertToType(data['onboarding'], 'Boolean');
                }
            }
            return obj;
        }

        /**
        * Username of the user to create. This should follow standard username conventions - spaces are not allowed, etc. We do allow email addresses as usernames.  **Note** Usernames must be unique across all ExaVault accounts.
        * @member {String} username
        */

        /**
        * An optional nickname (e.g. 'David from Sales').
        * @member {String} nickname
        */

        /**
        * Resource identifier for the user's home folder. See details on [how to specify resources](#section/Identifying-Resources) above.  The user will be locked to this directory and unable to move 'up' in the account. If the folder does not exist in the account, it will be created when the user is created.   Users with the `role` **admin** should have their homeResource set to '/'
        * @member {String} homeResource
        */

        /**
        * Email address for the user
        * @member {String} email
        */

        /**
        * Password for the user
        * @member {String} password
        */

        /**
        * The type of user to create, either **user** or **admin**.
        * @member {module:model/AddUserRequestBody.RoleEnum} role
        */

        /**
        * @member {module:model/UsersPermissions} permissions
        */

        /**
        * Time zone, used for accurate time display within the application. See <a href='https://php.net/manual/en/timezones.php' target='blank'>this page</a> for allowed values. 
        * @member {String} timeZone
        */

        /**
        * Optional timestamp when the user should expire, formatted in date-time.
        * @member {String} expiration
        */

        /**
        * If true, the user will not be able to log in
        * @member {Boolean} locked
        */

        /**
        * If **true**, send this new user a welcome email upon creation. The content of the welcome email can be configured with the [PATCH /accounts](#operation/updateAccount) method.
        * @member {Boolean} welcomeEmail
        */

        /**
        * Set this to **true** to enable extra help popups in the web file manager for this user.
        * @member {Boolean} onboarding
        */


        /**
        * Allowed values for the <code>role</code> property.
        * @enum {String}
        * @readonly
        */

    }]);

    return AddUserRequestBody;
}();

AddUserRequestBody.RoleEnum = {
    /**
     * value: "user"
     * @const
     */
    "user": "user",
    /**
     * value: "admin"
     * @const
     */
    "admin": "admin" };
exports.default = AddUserRequestBody;