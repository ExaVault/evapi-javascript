'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**
xaVault API
ee our API reference documentation at https://www.exavault.com/developer/api-docs/
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      *
penAPI spec version: 2.0
ontact: support@exavault.com

his class is auto generated by the swagger code generator program.
https://github.com/swagger-api/swagger-codegen.git
o not edit the class manually.



var _ApiClient = require('../ApiClient');

var _ApiClient2 = _interopRequireDefault(_ApiClient);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
* The Body6 model module.
* @module model/Body6
* @version 2.2.1
*/
var Body6 = function () {
    /**
    * Constructs a new <code>Body6</code>.
    * @alias module:model/Body6
    * @class
    */

    function Body6() {
        _classCallCheck(this, Body6);

        this['username'] = undefined;
        this['nickname'] = undefined;
        this['homeResource'] = undefined;
        this['email'] = undefined;
        this['password'] = undefined;
        this['role'] = undefined;
        this['permissions'] = undefined;
        this['timeZone'] = undefined;
        this['expiration'] = undefined;
        this['locked'] = undefined;
        this['onboarding'] = undefined;
        this['currentUserPassword'] = undefined;
    }

    /**
    * Constructs a <code>Body6</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Body6} obj Optional instance to populate.
    * @return {module:model/Body6} The populated <code>Body6</code> instance.
    */


    _createClass(Body6, null, [{
        key: 'constructFromObject',
        value: function constructFromObject(data, obj) {
            if (data) {
                obj = obj || new Body6();

                if (data.hasOwnProperty('username')) {
                    obj['username'] = _ApiClient2.default.convertToType(data['username'], 'String');
                }
                if (data.hasOwnProperty('nickname')) {
                    obj['nickname'] = _ApiClient2.default.convertToType(data['nickname'], 'String');
                }
                if (data.hasOwnProperty('homeResource')) {
                    obj['homeResource'] = _ApiClient2.default.convertToType(data['homeResource'], 'String');
                }
                if (data.hasOwnProperty('email')) {
                    obj['email'] = _ApiClient2.default.convertToType(data['email'], 'String');
                }
                if (data.hasOwnProperty('password')) {
                    obj['password'] = _ApiClient2.default.convertToType(data['password'], 'String');
                }
                if (data.hasOwnProperty('role')) {
                    obj['role'] = _ApiClient2.default.convertToType(data['role'], 'String');
                }
                if (data.hasOwnProperty('permissions')) {
                    obj['permissions'] = _ApiClient2.default.convertToType(data['permissions'], 'String');
                }
                if (data.hasOwnProperty('timeZone')) {
                    obj['timeZone'] = _ApiClient2.default.convertToType(data['timeZone'], 'String');
                }
                if (data.hasOwnProperty('expiration')) {
                    obj['expiration'] = _ApiClient2.default.convertToType(data['expiration'], 'String');
                }
                if (data.hasOwnProperty('locked')) {
                    obj['locked'] = _ApiClient2.default.convertToType(data['locked'], 'Boolean');
                }
                if (data.hasOwnProperty('onboarding')) {
                    obj['onboarding'] = _ApiClient2.default.convertToType(data['onboarding'], 'Boolean');
                }
                if (data.hasOwnProperty('currentUserPassword')) {
                    obj['currentUserPassword'] = _ApiClient2.default.convertToType(data['currentUserPassword'], 'String');
                }
            }
            return obj;
        }

        /**
        * New username for the user. This should follow standard username conventions - spaces are not allowed, etc. We do allow email addresses as usernames.  **Note** Usernames must be unique across all ExaVault accounts.
        * @member {String} username
        */

        /**
        * An optional nickname (e.g. 'David from Sales').
        * @member {String} nickname
        */

        /**
        * Resource identifier for the user's home folder. See details on [how to specify resources](#section/Identifying-Resources) above.  The user will be locked to this directory and unable to move 'up' in the account. If the folder does not exist in the account, it will be created when the user logs in.  This setting is ignored for users with the `role` **admin**.
        * @member {String} homeResource
        */

        /**
        * Email address for the user
        * @member {String} email
        */

        /**
        * New password for the user
        * @member {String} password
        */

        /**
        * The type of user (**admin** or **user**). Note that admin users cannot have a `homeResource` other than '/', and will have full permissions, but you must provide at least \"download,upload,list,delete\" in the `permissions` parameter.
        * @member {module:model/Body6.RoleEnum} role
        */

        /**
        * A CSV string of [user permissions](/docs/account/04-users/00-introduction#managing-user-roles-and-permissions). For example: **upload,download,list**. Note that users will be unable to see any files in the account unless you include **list** permission.   Valid permissions are **list**, **download**, **upload**, **modify**, **delete**, **changePassword**, **share**, **notification**, **viewFormData**, **deleteFormData** 
        * @member {String} permissions
        */

        /**
        * Time zone, used for accurate time display within the application. See <a href='https://php.net/manual/en/timezones.php' target='blank'>this page</a> for allowed values. 
        * @member {String} timeZone
        */

        /**
        * Optional timestamp when the user should expire.
        * @member {String} expiration
        */

        /**
        * If true, the user will be prevented from logging in
        * @member {Boolean} locked
        */

        /**
        * Set this to **true** to enable extra help popups in the web file manager for this user.
        * @member {Boolean} onboarding
        */

        /**
        * The password of the currently authenticated user. Required when updating any user’s email, username or password.
        * @member {String} currentUserPassword
        */


        /**
        * Allowed values for the <code>role</code> property.
        * @enum {String}
        * @readonly
        */

    }]);

    return Body6;
}();

Body6.RoleEnum = {
    /**
     * value: "user"
     * @const
     */
    "user": "user",
    /**
     * value: "admin"
     * @const
     */
    "admin": "admin" };
exports.default = Body6;